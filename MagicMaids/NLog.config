<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
	  throwExceptions="true"
	  internalLogToConsole="false" 
	  internalLogToConsoleError="false"
	  internalLogFile="nlog_critical.log" 
	  internalLogLevel="Debug"
	>
  <extensions>
    <!-- load NLog.Extended to enable ASP.NET-specific functionality -->
    <add assembly="NLog.Extended" />
  </extensions>
  
  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
 <!-- <variable name="myvar" value="myvalue"/>-->

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!--
    add your targets here
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Write events to a file with the date in the filename.
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
       <!-- file targets -->
    	<target name="asyncFile" xsi:type="AsyncWrapper">
      		<target xsi:type="File" name="f" fileName="Logs/${shortdate}.log"
            	layout="${longdate} ${uppercase:${level}} ${message} ${aspnet-user-identity} ${exception:tostring}"
				archiveFileName="Logs/archive.{#}.log"
           		archiveEvery="Day"
           		archiveNumbering="Rolling"
           		maxArchiveFiles="7"
       			concurrentWrites="true"
           		keepFileOpen="false"
           		encoding="iso-8859-2"/>
    	</target>
		
		<target name="database" xsi:type="Database"
          connectionStringName="MagicMaidsDBConn">

			<commandText>
			    insert into Logs (
			      LoggedDate, Level, Message, UserName,
			      URL, ServerAddress, RemoteAddress,
				  RequestUrl, MvcAction,
			      Logger, CallSite, 
			      EventContext, InnerErrorMessage,
				  Exception, ObjectContext
			    ) values (
			      @Logged, @Level, @Message, @Username,
			      @Url, @ServerAddress, @RemoteAddress, @RequestUrl, @MvcAction,
			      @Logger, @Callsite, 
			      @EventContext, @InnerErrorMessage,
				  @Exception, @ObjectContext
			    );
			  </commandText>

			  <parameter name="@Logged" layout="${date:universalTime=true}" />
			  <parameter name="@Level" layout="${uppercase:${level}}" />
			  <parameter name="@Message" layout="${message}" />
			  <parameter name="@Username" layout="${aspnet-user-identity}" />
			  <parameter name="@Url" layout="${aspnet-request:serverVariable=HTTP_URL}" />
			  <parameter name="@ServerAddress" layout="${aspnet-request:serverVariable=LOCAL_ADDR}" />
			  <parameter name="@RemoteAddress" layout="${aspnet-request:serverVariable=REMOTE_ADDR}:${aspnet-request:serverVariable=REMOTE_PORT}" />
			  <parameter name="@MvcAction" layout="${aspnet-MVC-Action}" />
			  <parameter name="@RequestUrl" layout="${event-context:item=RequestUrl}" />
			  <parameter name="@Logger" layout="${logger}" />
			  <parameter name="@CallSite" layout="${event-properties:item=`CustomCallSite}" />
			  <parameter name="@EventContext" layout="${all-event-properties:separator=|}" /> 
			  <parameter name="@InnerErrorMessage" layout="${exception:format=type,message,method:maxInnerExceptionLevel=5:innerFormat=shortType,message,method}" />
		  	  <parameter name="@exception" layout="${exception:tostring}" />
			  <parameter name="@ObjectContext" layout="${event-properties:item=ObjectContextData}" />
  	</target>
  </targets>
<!-- ${exception:format=:innerFormat=ShortType,Message,Method:MaxInnerExceptionLevel=1:InnerExceptionSeparator=}" -->
  <rules>
    <!-- add your logging rules here -->
    <logger name="*" minlevel="Debug" writeTo="asyncFile" />
	<logger name="*" minlevel="Info" writeTo="database" />	
    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
    <logger name="*" minlevel="Debug" writeTo="f" />
    -->
  </rules>
</nlog>
